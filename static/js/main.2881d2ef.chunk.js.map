{"version":3,"sources":["components/HighChart.js","components/StockCard.js","components/StockMenu.js","components/StockView.js","components/WatchlistView.js","components/MarketView.js","App.js","serviceWorker.js","index.js"],"names":["DarkUnica","Highcharts","Chart","props","ohlc","data","volume","ticker","options","yAxis","labels","align","height","resize","enabled","top","offset","tooltip","shape","headerShape","borderWidth","shadow","positioner","width","point","chart","this","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","marginRight","y","plotY","series","plotTop","type","id","name","responsive","rules","condition","maxWidth","chartOptions","rangeSelector","inputEnabled","console","log","highcharts","constructorType","StockCard","Card","bg","text","style","Header","company_name","Body","Table","striped","bordered","hover","variant","StockMenu","StockView","Row","Col","sm","position","React","Component","WatchlistView","MarketView","getCandleUrl","count","resolution","base_url","generateData","finData","i","c","length","push","t","o","h","l","v","generateVolumeData","App","handleChange","e","search_field","target","value","handleEnter","key","preventDefault","state","stock_name","getStockCandle","handleSubmit","isDataLoaded","s","setState","url","fetch","then","response","json","storeCandleData","catch","err","backgroundColor","Container","fluid","Navbar","expand","sticky","Brand","color","href","Toggle","aria-controls","Collapse","Nav","className","Link","Form","inline","Control","size","placeholder","onChange","onKeyPress","onSubmit","Button","onClick","exact","path","render","Fragment","renderStockView","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2881d2ef.chunk.js","sourcesContent":["import React from 'react'\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\nimport DarkUnica from 'highcharts/themes/dark-unica';\n\nDarkUnica(Highcharts);\n\nfunction Chart(props) {\n  var ohlc = props.data;\n  var volume = props.volume;\n  var ticker = props.ticker;\n\n  const options = {\n    yAxis: [{\n      labels: {\n          align: 'left'\n      },\n      height: '80%',\n      resize: {\n          enabled: true\n      }\n      }, {\n      labels: {\n          align: 'left'\n      },\n      top: '80%',\n      height: '20%',\n      offset: 0\n    }],\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      shadow: false,\n      positioner: function (width, height, point) {\n          var chart = this.chart,\n              position;\n\n          if (point.isHeader) {\n              position = {\n                  x: Math.max(\n                      // Left side limit\n                      chart.plotLeft,\n                      Math.min(\n                          point.plotX + chart.plotLeft - width / 2,\n                          // Right side limit\n                          chart.chartWidth - width - chart.marginRight\n                      )\n                  ),\n                  y: point.plotY\n              };\n          } else {\n              position = {\n                  x: point.series.chart.plotLeft,\n                  y: point.series.yAxis.top - chart.plotTop\n              };\n          }\n\n          return position;\n      }\n    },\n    series: [{\n      type: 'ohlc',\n      id: 'aapl-ohlc',\n      name: ticker + ' Stock Price',\n      data: ohlc\n    }, {\n      type: 'column',\n      id: ticker + '-volume',\n      name: ticker + ' Volume',\n      data: volume,\n      yAxis: 1\n    }],\n    responsive: {\n      rules: [{\n          condition: {\n              maxWidth: 800\n          },\n          chartOptions: {\n              rangeSelector: {\n                  inputEnabled: false\n              }\n          }\n      }]\n    }\n  }\n\n  console.log(\"highchart: \", props.data);\n  return (<HighchartsReact\n    highcharts={Highcharts}\n    constructorType={'stockChart'}\n    options={options}\n  />)\n};\n\nexport default Chart\n","import React from 'react';\nimport { Card, Table } from 'react-bootstrap'\n\nconst StockCard = (props) => {\n  console.log(props.data);\n  var data = props.data[0];\n  return (\n    <Card bg=\"dark\" text=\"white\" style={{ width: '100%' }}>\n    <Card.Header><center>{ props.company_name } </center></Card.Header>\n    <Card.Body>\n      <Table striped bordered hover variant=\"dark\">\n        <tbody>\n          <tr>\n            <td>Ticker</td>\n            <td>{props.ticker}</td>\n          </tr>\n          <tr>\n            <td>Open </td>\n            <td>${ data[1] }</td>\n          </tr>\n          <tr>\n            <td>Close </td>\n            <td>${ data[2] }</td>\n          </tr>\n          <tr>\n            <td>High </td>\n            <td>${ data[3] }</td>\n          </tr>\n          <tr>\n            <td>Low </td>\n            <td>${ data[4] }</td>\n          </tr>\n          <tr>\n            <td>Volume</td>\n            <td>{ data.volume }</td>\n          </tr>\n        </tbody>\n      </Table>\n    </Card.Body>\n  </Card>\n  );\n};\n\nexport default StockCard;\n","import React from 'react';\nimport { Card, Table } from 'react-bootstrap'\n\nconst StockMenu = (props) => {\n  return (\n    <Card bg=\"dark\" text=\"white\" style={{ width: '100%' }}>\n    <Card.Header><center>OPTIONS</center></Card.Header>\n    <Card.Body>\n      <Table striped bordered hover variant=\"dark\">\n        <tbody>\n          <tr>\n          </tr>\n          <tr>\n          </tr>\n          <tr>\n          </tr>\n          <tr>\n          </tr>\n          <tr>\n          </tr>\n          <tr>\n          </tr>\n        </tbody>\n      </Table>\n    </Card.Body>\n  </Card>\n  );\n};\n\nexport default StockMenu;","import React from 'react';\nimport Chart from './HighChart'\nimport StockCard from './StockCard'\nimport StockMenu from './StockMenu'\nimport { Row, Col } from 'react-bootstrap'\n\nclass StockView extends React.Component {\n  render() {\n    console.log(\"StockView Render\");\n    return (\n      <Row>\n        <Col sm={9}>\n          <div style={{height:\"800px\", width:\"100%\"}}>\n            <Chart ticker={this.props.ticker} data={this.props.data} volume={this.props.volume}/>\n          </div>\n        </Col>\n        <Col sm={3}>\n          <div style={{position:'relative', height:\"800px\", width:\"100%\"}}>\n            <StockCard ticker={this.props.ticker} company_name={this.props.company_name} data={this.props.data} />\n            <br/>\n            <StockMenu />\n          </div>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nexport default StockView;\n","import React from 'react';\n\nexport default class WatchlistView extends React.Component {\n  render() {\n    return (<div></div>)\n  }\n}","import React from 'react';\n\nexport default class MarketView extends React.Component {\n    render() {\n        return (\n            <div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport { Navbar, Nav, Form, Button } from 'react-bootstrap';\nimport './App.css';\nimport StockView from './components/StockView'\nimport WatchlistView from './components/WatchlistView'\nimport MarketView from './components/MarketView'\n\nconst base_url = 'https://finnhub.io/api/v1';\nconst candle_endpoint = '/stock/candle?';\n\nfunction getCandleUrl(name, count, resolution)\n{\n  var url = base_url + candle_endpoint + \"symbol=\" + name + \"&resolution=\" + resolution +  \"&count=\" + count + \"&token=boamq6vrh5rbii6a3j30\"\n  return (url);\n}\n\nfunction generateData(finData) {\n  var data = [];\n  for (var i=0; i < finData.c.length; i++)\n  {\n    data.push([\n      finData.t[i] * 1000,\n      finData.o[i],\n      finData.h[i],\n      finData.l[i],\n      finData.c[i],\n      finData.v[i]\n    ]);\n  }\n  return (data);\n}\n\nfunction generateVolumeData(finData) {\n  var data = [];\n  for (var i=0; i < finData.c.length; i++)\n  {\n    data.push([\n      finData.t[i] * 1000,\n      finData.v[i]\n    ]);\n  }\n  return (data);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search_field: '',\n      stock_name: \"TWTR\",\n      data: [],\n      volume: [],\n      isDataLoaded:false,\n      resolution:'',\n      company_name:'TWITTER'\n    };\n\n    var search_field = '';\n  }\n\n  handleChange = (e) => {\n    this.search_field = e.target.value;\n  }\n\n  handleEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      if (this.search_field !== this.state.stock_name) {\n        this.getStockCandle(this.search_field, 200, \"D\");\n      }\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.search_field !== this.state.stock_name) {\n      this.getStockCandle(this.search_field, 200, \"D\");\n    }\n  }\n\n  storeCandleData(data, name, resolution)\n  {\n    if (data.s === \"ok\") {\n      this.setState({\n        data:generateData(data),\n        volume:generateVolumeData(data),\n        stock_name:name,\n        resolution:resolution,\n        isDataLoaded:true,\n      });\n    } else {\n      console.log(\"invalid user input\");\n    }\n  }\n\n  getStockCandle(name=\"TWTR\", count=200, resolution=\"D\")\n  {\n    var url = getCandleUrl(name, count, resolution);\n    console.log(\"fetching: \", url);\n    fetch(url, {\n      \"method\": \"GET\",\n    })\n    .then(response => response.json())\n    .then(data => this.storeCandleData(data, name, resolution))\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount(){\n    this.getStockCandle(this.state.stock_name, 200, \"D\");\n  }\n\n  renderStockView(){\n    if (this.state.isDataLoaded) {\n      return (<StockView ticker={this.state.stock_name} data={this.state.data} volume={this.state.volume} company_name={this.state.company_name} />);\n    }\n  }\n\n  render() {\n    return (\n      <div style={{backgroundColor:'gray'}}>\n        <Router>\n        <Container fluid>\n          <Navbar hover bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\n            <Navbar.Brand style={{color:\"#20c94d\"}}href=\"/stock_view\">stock_view</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/stock_view\">Home</Nav.Link>\n                <Nav.Link href=\"/stock_view/watchlist\">Watchlist</Nav.Link>\n                <Nav.Link href=\"/stock_view/markets\">Markets</Nav.Link>\n              </Nav>\n              <Form inline >\n                <Form.Control size=\"sm\" type=\"text\" placeholder=\"TWTR\" className=\"mr-sm-2\" onChange={this.handleChange} onKeyPress={this.handleEnter} onSubmit={this.handleSubmit}/>\n                <Button size=\"sm\" variant=\"outline-success\" onClick={this.handleSubmit} >Search</Button>\n              </Form>\n            </Navbar.Collapse>\n          </Navbar>\n          <br/>\n          <Route\n\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\tpath='/stock_view'\n\t\t\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t\t\t<React.Fragment>\n                  { this.renderStockView() }\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n          <Route exact path=\"/stock_view/watchlist\" component={WatchlistView} />\n          <Route exact path=\"/stock_view/markets\" component={MarketView} />\n        </Container>\n      </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}