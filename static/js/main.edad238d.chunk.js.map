{"version":3,"sources":["components/StockView.js","actions.js","containers/StockView.js","containers/Search.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["DarkUnica","Highcharts","StockView","props","console","log","isDataLoaded","Row","Col","sm","style","height","width","highcharts","constructorType","options","ohlc","data","volume","ticker","symbol","yAxis","labels","align","resize","enabled","top","offset","tooltip","shape","headerShape","borderWidth","shadow","positioner","point","chart","this","isHeader","x","Math","max","plotLeft","min","plotX","chartWidth","marginRight","y","plotY","series","plotTop","type","id","name","responsive","rules","condition","maxWidth","chartOptions","rangeSelector","inputEnabled","position","Card","bg","text","Header","class","Button","textAlign","padding","fontSize","lineHeight","borderRadius","Body","Table","striped","bordered","variant","description","baseUrl","token","getUrl","endpoint","count","resolution","url","fetchProfile","dispatch","fetch","then","response","json","error","receiveProfile","fetchStock","requestStock","receiveStock","StockContainer","connect","state","onClick","addStock","input","handleSubmit","e","value","preventDefault","trim","Form","inline","onSubmit","Control","size","placeholder","className","ref","App","Container","fluid","Navbar","hover","expand","sticky","Brand","color","href","Toggle","aria-controls","Collapse","Nav","Link","exact","path","component","React","Component","Boolean","window","location","hostname","match","initialState","open","high","close","low","isFetching","generateData","finData","i","c","length","push","t","o","h","l","generateVolumeData","v","rootReducer","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edad238d.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'react-bootstrap'\nimport { Button, Card, Table } from 'react-bootstrap'\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\nimport DarkUnica from 'highcharts/themes/dark-unica';\n\nDarkUnica(Highcharts);\n\nfunction getOptions(ohlc, volume, ticker) {\n  return ({\n    yAxis: [{\n      labels: {\n          align: 'left'\n      },\n      height: '80%',\n      resize: {\n          enabled: true\n      }\n      }, {\n      labels: {\n          align: 'left'\n      },\n      top: '80%',\n      height: '20%',\n      offset: 0\n    }],\n    tooltip: {\n      shape: 'square',\n      headerShape: 'callout',\n      borderWidth: 0,\n      shadow: false,\n      positioner: function (width, height, point) {\n          var chart = this.chart,\n              position;\n\n          if (point.isHeader) {\n              position = {\n                  x: Math.max(\n                      // Left side limit\n                      chart.plotLeft,\n                      Math.min(\n                          point.plotX + chart.plotLeft - width / 2,\n                          // Right side limit\n                          chart.chartWidth - width - chart.marginRight\n                      )\n                  ),\n                  y: point.plotY\n              };\n          } else {\n              position = {\n                  x: point.series.chart.plotLeft,\n                  y: point.series.yAxis.top - chart.plotTop\n              };\n          }\n\n          return position;\n      }\n    },\n    series: [{\n      type: 'ohlc',\n      id: 'aapl-ohlc',\n      name: ticker + ' Stock Price',\n      data: ohlc\n    }, {\n      type: 'column',\n      id: ticker + '-volume',\n      name: ticker + ' Volume',\n      data: volume,\n      yAxis: 1\n    }],\n    responsive: {\n      rules: [{\n          condition: {\n              maxWidth: 800\n          },\n          chartOptions: {\n              rangeSelector: {\n                  inputEnabled: false\n              }\n          }\n      }]\n    }\n  });\n}\n\nconst StockView = (props) => {\n  console.log(\"StockView props: \", props);\n  if (props.isDataLoaded) {\n  return (\n    <Row>\n      <Col sm={9}>\n        <div style={{height:\"100%\", width:\"100%\"}}>\n            <HighchartsReact\n              highcharts={Highcharts}\n              constructorType={'stockChart'}\n              options={getOptions(props.data, props.volume, props.symbol)}\n            />\n        </div>\n      </Col>\n      <Col sm={3}>\n        <div style={{position:'relative', height:\"100%\", width:\"100%\"}}>\n          <Card bg=\"dark\" text=\"white\" style={{ width: '100%' }}>\n            <Card.Header>\n              <div class=\"float-left\">{props.name}</div>\n              <div class=\"float-right\"><Button style={{\n                width: \"30px\",\n                height: \"30px\",\n                textAlign: \"center\",\n                padding: \"0px 6px\",\n                fontSize: \"14px\",\n                lineHeight: 1.428571429,\n                borderRadius: \"15px\"\n              }}>+</Button></div>\n            </Card.Header>\n            <Card.Body>\n              <Table striped bordered variant=\"dark\">\n                <tbody>\n                  <tr>\n                    <td>Ticker</td>\n                    <td>{props.symbol}</td>\n                  </tr>\n                  <tr>\n                    <td>Open </td>\n                    <td>${ props.data[0][1] }</td>\n                  </tr>\n                  <tr>\n                    <td>Close </td>\n                    <td>${ props.data[0][4] }</td>\n                  </tr>\n                  <tr>\n                    <td>High </td>\n                    <td>${ props.data[0][2] }</td>\n                  </tr>\n                  <tr>\n                    <td>Low </td>\n                    <td>${ props.data[0][3] }</td>\n                  </tr>\n                  <tr>\n                    <td>Volume</td>\n                    <td>{ props.volume[0][1] }</td>\n                  </tr>\n                </tbody>\n              </Table>\n              <p>{ props.description }</p>\n            </Card.Body>\n          </Card>\n        </div>\n      </Col>\n    </Row>\n  )}\n  return (<div></div>)\n}\n\nexport default StockView;","export const SEARCH_STOCK = \"SEARCH_STOCK\";\nexport const REQUEST_STOCK = \"REQUEST_STOCK\";\nexport const RECEIVE_STOCK = \"RECEIVE_STOCK\";\nexport const FETCH_STOCK = \"FETCH_STOCK\";\nexport const RECEIVE_PROFILE = \"RECEIVE_PROFILE\";\nexport const ADD_STOCK = \"ADD_STOCK\";\n\nexport function searchStock(symbol) {\n  console.log(symbol);\n  return {\n    type: \"SEARCH_STOCK\",\n    symbol\n  }\n}\n\nfunction requestStock(symbol) {\n  return {\n    type: \"REQUEST_STOCK\",\n    symbol\n  }\n}\n\nfunction receiveStock(symbol, data) {\n  return {\n    type: \"RECEIVE_STOCK\",\n    symbol,\n    data: data\n  }\n}\n\nfunction receiveProfile(data) {\n  console.log(data);\n  return {\n    type: \"RECEIVE_PROFILE\",\n    description: data.description,\n    name: data.name\n  }\n}\n\nexport function addStock(symbol) {\n  return {\n    type: \"ADD_STOCK\",\n    symbol\n  }\n}\n\nconst baseUrl = 'https://finnhub.io/api/v1';\nconst candleEndpoint = '/stock/candle?';\nconst profileEndpoint = '/stock/profile?';\nconst token = \"&token=boamq6vrh5rbii6a3j30\";\n\nfunction getUrl(endpoint=candleEndpoint, symbol=\"TWTR\", count=200, resolution=\"D\")\n{\n  var url = baseUrl + endpoint;\n  if (endpoint === candleEndpoint) {\n    url += \"symbol=\" + symbol + \"&resolution=\" + resolution +  \"&count=\" + count;\n  } else if (endpoint === profileEndpoint) {\n    url += \"symbol=\" + symbol;\n  }\n  url += token;\n  return (url);\n}\n\nfunction fetchProfile(symbol) {\n  return function (dispatch) {\n    var url = getUrl(profileEndpoint, symbol);\n    console.log(url);\n    return fetch(url)\n      .then(\n        response => response.json(),\n        error => console.log(\"ERROR: \", error)\n      )\n      .then(data => dispatch(receiveProfile(data)));\n  }\n}\n\nexport function fetchStock(symbol) {\n  return function(dispatch) {\n    dispatch(requestStock(symbol));\n    fetchProfile(symbol)(dispatch);\n    var url = getUrl(candleEndpoint, symbol);\n    console.log(url);\n    return fetch(url)\n      .then(\n        response => response.json(),\n        error => console.log(\"ERROR: \", error)\n      )\n      .then(data => dispatch(receiveStock(symbol, data)));\n  }\n}","import { connect } from 'react-redux'\nimport StockView from '../components/StockView'\nimport { addStock } from '../actions'\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return {\n    symbol: state.symbol,\n    name: state.name,\n    description: state.description,\n    data: state.data,\n    volume: state.volume,\n    isDataLoaded: state.isDataLoaded\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClick: symbol => {\n      dispatch(addStock(symbol))\n    }\n  }\n}\n\nconst StockContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (StockView)\n\nexport default StockContainer","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport { fetchStock } from '../actions';\nconst Search = ({dispatch}) => {\n  let input;\n\n  const handleSubmit = (e) => {\n    console.log(\"search submit: \", input.value);\n    e.preventDefault();\n    if (!input.value.trim()) {\n      return;\n    }\n    dispatch(fetchStock(input.value));\n    input.value = '';\n  }\n\n  return (\n  <Form inline onSubmit={handleSubmit} >\n    <Form.Control\n      size=\"sm\"\n      type=\"text\"\n      placeholder=\"AAPL\"\n      className=\"mr-sm-2\"\n      onSubmit={handleSubmit}\n      ref={ref => { input = ref }}\n    />\n    <Button\n      size=\"sm\"\n      variant=\"outline-success\"\n      onClick={handleSubmit}\n    >Search</Button>\n  </Form>\n  )\n}\n\nexport default connect()(Search);","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport '../App.css';\nimport StockView from '../containers/StockView';\nimport Search from '../containers/Search';\n\nclass App extends React.Component {\n  render() {\n    return (\n        <Router>\n        <Container fluid>\n          <Navbar hover bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\n            <Navbar.Brand style={{color:\"#20c94d\"}}href=\"/stock_view\">stock_view</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/stock_view\">Home</Nav.Link>\n              </Nav>\n              <Search/>\n            </Navbar.Collapse>\n          </Navbar>\n          <br/>\n          <Route exact path=\"/stock_view\" component={StockView} />\n        </Container>\n      </Router>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {  SEARCH_STOCK,\n          FETCH_STOCK,\n          REQUEST_STOCK,\n          RECEIVE_STOCK,\n          RECEIVE_PROFILE} from '../actions';\n\nconst initialState = {\n  symbol: '',\n  data: {\n    open:[],\n    high:[],\n    close:[],\n    low:[]\n  },\n  volume: [],\n  isFetching:false,\n  resolution:'',\n  name:'',\n  description:'',\n  isDataLoaded:false\n}\n\nfunction generateData(finData) {\n  var data = [];\n  for (var i=0; i < finData.c.length; i++)\n  {\n    data.push([\n      finData.t[i] * 1000,\n      finData.o[i],\n      finData.h[i],\n      finData.l[i],\n      finData.c[i]\n    ]);\n  }\n  return (data);\n}\n\nfunction generateVolumeData(finData) {\n  var data = [];\n  for (var i=0; i < finData.c.length; i++)\n  {\n    data.push([\n      finData.t[i] * 1000,\n      finData.v[i]\n    ]);\n  }\n  return (data);\n}\n\nfunction  rootReducer(\n  state=initialState,\n  action=FETCH_STOCK\n) {\n  switch (action.type) {\n    case SEARCH_STOCK:\n      return Object.assign({}, state, {\n        symbol: action.symbol\n      })\n    case REQUEST_STOCK:\n      return Object.assign({}, state, {\n        symbol: action.symbol,\n        isFetching: true\n      })\n    case RECEIVE_STOCK:\n      return Object.assign({}, state, {\n        isFetching: false,\n        data: generateData(action.data),\n        volume: generateVolumeData(action.data),\n        isDataLoaded: true\n      })\n    case RECEIVE_PROFILE:\n      return Object.assign({}, state, {\n        name: action.name,\n        description: action.description\n      })\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers'\nimport thunkMiddleware from 'redux-thunk'\nimport { fetchStock } from './actions'\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nstore.subscribe(() => console.log(store.getState()))\nstore.dispatch(fetchStock(\"AAPL\")).then(() => console.log(store.getState()))\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()"],"sourceRoot":""}